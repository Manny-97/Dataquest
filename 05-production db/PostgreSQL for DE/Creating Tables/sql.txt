import psycopg2
conn = psycopg2.connect("dbname=dq user=dq")
cur = conn.cursor()
query_string = """
    INSERT INTO ign_reviews VALUES(
        5249979066121302000, 
        'Amazing', 
        'LittleBigPlanet PS Vita', 
        '/games/littlebigplanet-vita/vita-98907', 
        'PlayStation Vita', 
        9.0,
        'Platformer', 
        'Y', 
        2012, 
        9, 
        12
    );
"""
cur.execute(query_string)



Describing Tables

import psycopg2
conn = psycopg2.connect("dbname=dq user=dq")
cur = conn.cursor()
cur.execute("SELECT * FROM ign_reviews LIMIT 10;")
print(cur.description)



Understanding the description

import psycopg2
conn = psycopg2.connect("dbname=dq user=dq")
cur = conn.cursor()
cur.execute("SELECT typname FROM pg_catalog.pg_type WHERE oid = 25;")
type_name_25 = cur.fetchone()[0]
print(type_name_25)
cur.execute("SELECT typname FROM pg_catalog.pg_type WHERE oid = 700")
type_name_700 = cur.fetchone()[0]
print(type_name_700)



Finding the right ID data type

import psycopg2
conn = psycopg2.connect("dbname=dq user=dq")
cur = conn.cursor()
cur.execute("ALTER TABLE ign_reviews ALTER COLUMN id TYPE bigint;")
conn.commit()
conn.close()



Float-Like Types

import psycopg2
conn = psycopg2.connect("dbname=dq user=dq")
cur = conn.cursor()
cur.execute("ALTER TABLE ign_reviews ALTER COLUMN score TYPE DECIMAL(3, 1);")
conn.commit()
conn.close()



Finding the max length

import csv
with open('ign.csv', 'r') as f:
    next(f) # skip the row containing column headers
    reader = csv.reader(f)
    # create a set to contain all score phrases
    unique_words_in_score_phrase = set()
    for row in reader:
        # add the score phrase from this row to the set
        score_phrase = row[1]
        unique_words_in_score_phrase.add(score_phrase)
        
sorted_words = sorted(unique_words_in_score_phrase, key=len)
print(len(sorted_words[-1]))



Max string-like Datatypes

import psycopg2
conn = psycopg2.connect("dbname=dq user=dq")
cur = conn.cursor()
cur.execute("ALTER TABLE ign_reviews ALTER COLUMN score_phrase TYPE varchar(11);")
conn.commit()
conn.close()



Enumerated Datatypes

import psycopg2
conn = psycopg2.connect("dbname=dq user=dq")
cur = conn.cursor()
cur.execute("""
    CREATE TYPE evaluation_enum AS ENUM (
    'Great',       'Mediocre', 'Bad', 
    'Good',        'Awful',    'Okay', 
    'Masterpiece', 'Amazing',  'Unbearable', 
    'Disaster',    'Painful');
""")
# add your code below this comment
cur.execute("ALTER TABLE ign_reviews ALTER COLUMN score_phrase TYPE evaluation_enum USING score_phrase::evaluation_enum;")
conn.commit()
conn.close()



